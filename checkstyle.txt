Starting audit...
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Add.java:10:5: Class 'Add' looks like designed for extension (can be subclassed), but the method 'findMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Add' final or making the method 'findMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Add.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Add.java:10:57: Parameter nameMovie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Add.java:19:5: Class 'Add' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Add' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Add.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Add.java:23:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:12:5: Class 'Delete' looks like designed for extension (can be subclassed), but the method 'findMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Delete' final or making the method 'findMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:21:5: Class 'Delete' looks like designed for extension (can be subclassed), but the method 'modifyUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Delete' final or making the method 'modifyUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:31:5: Class 'Delete' looks like designed for extension (can be subclassed), but the method 'deleteFromList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Delete' final or making the method 'deleteFromList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:46:5: Class 'Delete' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Delete' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Delete.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:7:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:10:13: Variable 'session' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:11:26: Variable 'likedGenres' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:13:26: Parameter session should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:17:5: Class 'Recomendation' looks like designed for extension (can be subclassed), but the method 'findLikedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recomendation' final or making the method 'findLikedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:48:5: Class 'Recomendation' looks like designed for extension (can be subclassed), but the method 'findRecomendation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recomendation' final or making the method 'findRecomendation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:48:36: Parameter likedGenre should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:48:55: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:77:5: Class 'Recomendation' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recomendation' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Recomendation.java:113:5: Class 'Recomendation' looks like designed for extension (can be subclassed), but the method 'getSession' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recomendation' final or making the method 'getSession' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Subscribe.java:11:5: Class 'Subscribe' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Subscribe' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Subscribe.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Subscribe.java:14: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_database\Subscribe.java:17:23: '==' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Buy.java:7:29: Name 'minTokens' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Buy.java:30: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:31: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:41: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:133:60: ')' is preceded with whitespace. [ParenPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:150: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:155: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:159: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:164: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Filter.java:168: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Purchase.java:38:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Purchase.java:42: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Purchase.java:56: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Rate.java:33:38: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Rate.java:44: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\actions_pages\Watch.java:25:5: Class 'Watch' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Watch' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\factory_design\ActionFactory.java:6:29: Using the '.*' form of import should be avoided - actions.actions_pages.*. [AvoidStarImport]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\factory_design\ActionFactory.java:10:5: Class 'ActionFactory' looks like designed for extension (can be subclassed), but the method 'getStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionFactory' final or making the method 'getStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\factory_design\ActionFactory.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\factory_design\ActionFactory.java:11:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\factory_design\ActionFactory.java:13:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:12:14: Variable 'dataBase' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:15:25: Parameter dataBase should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:37:5: Class 'EventManager' looks like designed for extension (can be subclassed), but the method 'notify' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EventManager' final or making the method 'notify' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:37:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:37:25: Parameter eventType should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:37:43: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:53:5: Class 'EventManager' looks like designed for extension (can be subclassed), but the method 'turnOnUserNotifs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EventManager' final or making the method 'turnOnUserNotifs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\EventManager.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\observer_design\Observer.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:3:1: Redundant import from the same package - actions.strategy_design.Strategy. [RedundantImport]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:9:5: Class 'Context' looks like designed for extension (can be subclassed), but the method 'setStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Context' final or making the method 'setStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:9:29: Parameter strategy should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:9:38: 'strategy' hides a field. [HiddenField]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:9:48: Parameter session should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:14:5: Class 'Context' looks like designed for extension (can be subclassed), but the method 'executeStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Context' final or making the method 'executeStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Context.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Strategy.java:8:5: Class 'Strategy' looks like designed for extension (can be subclassed), but the method 'setSession' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Strategy' final or making the method 'setSession' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Strategy.java:8:28: Parameter session should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Strategy.java:12:5: Class 'Strategy' looks like designed for extension (can be subclassed), but the method 'getSession' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Strategy' final or making the method 'getSession' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\actions\strategy_design\Strategy.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:1:9: Name 'backup_actions' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:3:8: Unused import - database.Session. [UnusedImports]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:9:5: Class 'CommandAction' looks like designed for extension (can be subclassed), but the method 'makeBackUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandAction' final or making the method 'makeBackUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:9:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:9:29: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:13:5: Class 'CommandAction' looks like designed for extension (can be subclassed), but the method 'undo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommandAction' final or making the method 'undo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\CommandAction.java:13:22: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:1:9: Name 'backup_actions' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:9:27: Parameter oldSession should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:13:5: Class 'SnapshotAction' looks like designed for extension (can be subclassed), but the method 'restore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SnapshotAction' final or making the method 'restore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:13:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:17:5: Class 'SnapshotAction' looks like designed for extension (can be subclassed), but the method 'getSession' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SnapshotAction' final or making the method 'getSession' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:21:5: Class 'SnapshotAction' looks like designed for extension (can be subclassed), but the method 'setSession' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SnapshotAction' final or making the method 'setSession' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\backup_actions\SnapshotAction.java:21:28: Parameter session should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:23:5: Class 'ActionData' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionData' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:27:5: Class 'ActionData' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionData' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:27:33: Parameter deletedMovie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:31:5: Class 'ActionData' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionData' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:35:5: Class 'ActionData' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionData' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:35:31: Parameter addedMovie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:39:5: Class 'ActionData' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionData' final or making the method 'getSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:43:5: Class 'ActionData' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionData' final or making the method 'setSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\ActionData.java:43:36: Parameter subscribedGenre should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\CleanUp.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\DataBase.java:22:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Movie.java:4:8: Unused import - java.text.DecimalFormat. [UnusedImports]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:7:25: Parameter nameMovie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:7:43: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:12:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getNameMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getNameMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:16:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setNameMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setNameMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:16:30: Parameter nameMovie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:20:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:24:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Notification.java:24:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:74:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'getBackErrors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'getBackErrors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:78:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:82:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'setHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'setHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:82:28: Parameter history should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:86:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'getActionErr' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'getActionErr' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:90:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'setActionErr' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'setActionErr' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:90:30: Parameter actionErr should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:146:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'getOldFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'getOldFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:150:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'setOldFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'setOldFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:150:31: Parameter oldFeature should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:215:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'getUnbannedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'getUnbannedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:219:5: Class 'Session' looks like designed for extension (can be subclassed), but the method 'setUnbannedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Session' final or making the method 'setUnbannedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\Session.java:219:35: Parameter unbannedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:7:13: Variable 'isNotified' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:22:17: Parameter cr should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:25:32: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:28:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'update' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'update' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:28:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:28:25: Parameter notification should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:33:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'isNotified' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'isNotified' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:37:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNotified' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNotified' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:37:29: Parameter notified should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:56:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:64:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:72:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:72:37: Parameter subscribedGenres should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:76:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\database\User.java:76:34: Parameter notifications should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:19:5: Class 'ActionsInput' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionsInput' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:23:5: Class 'ActionsInput' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionsInput' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:23:33: Parameter deletedMovie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:27:5: Class 'ActionsInput' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionsInput' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:31:5: Class 'ActionsInput' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionsInput' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:31:31: Parameter addedMovie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:35:5: Class 'ActionsInput' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionsInput' final or making the method 'getSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:39:5: Class 'ActionsInput' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionsInput' final or making the method 'setSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\actions\ActionsInput.java:39:36: Parameter subscribedGenre should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\Parsing.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\Parsing.java:14:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\Parsing.java:34: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\Parsing.java:95: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\Parsing.java:126:36: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\input\Parsing.java:127:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Main.java:12:16: Variable 'i' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Main.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\output\Printer.java:7:16: Using the '.*' form of import should be avoided - database.*. [AvoidStarImport]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\output\Printer.java:103:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\output\Printer.java:117:80: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\output\Printer.java:163:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\output\Printer.java:163:40: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\output\Printer.java:163:41: Parameter notifications should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\output\Printer.java:165:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\HomepageLogged.java:38:19: '(' is followed by whitespace. [ParenPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\HomepageUnlogged.java:5:8: Unused import - pages.unlogged_subpages.Login. [UnusedImports]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\HomepageUnlogged.java:6:8: Unused import - pages.unlogged_subpages.Register. [UnusedImports]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:25:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'createSnapshot' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'createSnapshot' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:112:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'addToHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'addToHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:112:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:112:30: Parameter namePage should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:126:26: Parameter namePage should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:156:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setSession' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setSession' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\Page.java:156:28: Parameter session should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\PageFactory.java:16:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\PageFactory.java:18:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\PageFactory.java:24:51: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\SeeDetails.java:7:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\SeeDetails.java:45:16: '(' is followed by whitespace. [ParenPad]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\unlogged_subpages\Login.java:23:8: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\unlogged_subpages\Login.java:56:5: Class 'Login' looks like designed for extension (can be subclassed), but the method 'createSnapshot' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'createSnapshot' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\unlogged_subpages\Login.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\pages\unlogged_subpages\Register.java:47:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Platform.java:3:8: Unused import - actions.observer_design.EventManager. [UnusedImports]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Platform.java:16:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Platform.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Platform.java:30:7: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Platform.java:54: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Platform.java:64:57: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Test.java:206:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] C:\Users\Dbian\Desktop\POOTV\.\src\Test.java:222: Line is longer than 100 characters (found 108). [LineLength]
Audit done.
Checkstyle ends with 199 errors.
